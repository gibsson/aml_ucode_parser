commit 6baa15ea185e2cd4bbe6c84373c84633aa4cca91
Author: Peng Yixin <yixin.peng@amlogic.com>
Date:   Fri May 24 23:58:47 2019 +0800

    media: Solve can not play encrypt video of youtube [1/1]
    
    PD#SWPL-8977
    
    Problem:
    Can not play encrypt video of youtube
    
    Solution:
    Due to the competition, the number of input buff
    was judged in the wrong position, cause nofurther scheduling.
    
    Verify:
    U212
    
    Change-Id: If56cf9a4664d16520e54a2e327cf971e0481c17b
    Signed-off-by: Peng Yixin <yixin.peng@amlogic.com>

diff --git a/drivers/frame_provider/decoder/utils/vdec_input.c b/drivers/frame_provider/decoder/utils/vdec_input.c
index 665099d..9c7ed4c 100644
--- a/drivers/frame_provider/decoder/utils/vdec_input.c
+++ b/drivers/frame_provider/decoder/utils/vdec_input.c
@@ -929,6 +929,9 @@ int vdec_input_add_chunk(struct vdec_input_s *input, const char *buf,
 	list_add_tail(&chunk->list, &input->vframe_chunk_list);
 	input->data_size += chunk->size;
 	input->have_frame_num++;
+
+	if (input->have_frame_num == 1)
+		input->vdec_up(vdec);
 	ATRACE_COUNTER(MEM_NAME, input->have_frame_num);
 	if (chunk->pts_valid) {
 		input->last_inpts_u64 = chunk->pts64;
@@ -956,7 +959,6 @@ int vdec_input_add_frame(struct vdec_input_s *input, const char *buf,
 	struct drm_info drm;
 	struct vdec_s *vdec = input->vdec;
 	unsigned long phy_buf;
-	unsigned long flags;
 
 	if (vdec_secure(vdec)) {
 		while (count > 0) {
@@ -980,11 +982,7 @@ int vdec_input_add_frame(struct vdec_input_s *input, const char *buf,
 	} else {
 		ret = vdec_input_add_chunk(input, buf, count, 0);
 	}
-	flags = vdec_input_lock(input);
-	if ((input->have_frame_num == 1) &&
-		input->vdec_is_input_frame_empty(vdec))
-		input->vdec_up(vdec);
-	vdec_input_unlock(input, flags);
+
 	return ret;
 }
 EXPORT_SYMBOL(vdec_input_add_frame);

commit 00eef5b2ddbba917d3e58fca5a91397922ec200d
Author: Peng Yixin <yixin.peng@amlogic.com>
Date:   Fri Sep 27 15:48:39 2019 +0800

    media_module: h264 add force modify canvas mode node [1/1]
    
    PD#NONE
    
    Problem:
    Cannot modify canvas mode with node.
    
    Solution:
    Add logic to solve this problem.
    
    Verify:
    u212
    
    Change-Id: I487fa2d50b60f7bdfb309fd9f2a18e42c9658956
    Signed-off-by: Peng Yixin <yixin.peng@amlogic.com>

diff --git a/drivers/frame_provider/decoder/h264_multi/h264_dpb.h b/drivers/frame_provider/decoder/h264_multi/h264_dpb.h
index f3c8114..471ffa5 100644
--- a/drivers/frame_provider/decoder/h264_multi/h264_dpb.h
+++ b/drivers/frame_provider/decoder/h264_multi/h264_dpb.h
@@ -41,6 +41,18 @@
 #define PRINT_FLAG_V4L_DETAIL         0x8000
 #define DISABLE_ERROR_HANDLE          0x10000
 #define DEBUG_DUMP_STAT               0x80000
+/*setting canvas mode and endian.
+  if this flag is set, value of canvas mode
+  will according to the value of mem_map_mode.
+  endian will be forced set to 0 in
+  CANVAS_BLKMODE_LINEAR mode.
+  otherwise picture will display abnormal.
+  if this flag is not set, value of canvas mode
+  will be determined by the user speace config.
+  endian will be set 7 in CANVAS_BLKMODE_LINEAR mode.
+*/
+#define IGNORE_PARAM_FROM_CONFIG      0x8000000
+
 
 #define PIC_SINGLE_FRAME			0
 #define PIC_TOP_BOT_TOP				1
diff --git a/drivers/frame_provider/decoder/h264_multi/vmh264.c b/drivers/frame_provider/decoder/h264_multi/vmh264.c
index e3dac31..b378d1d 100644
--- a/drivers/frame_provider/decoder/h264_multi/vmh264.c
+++ b/drivers/frame_provider/decoder/h264_multi/vmh264.c
@@ -120,6 +120,7 @@
 
 #define H264_MMU
 #define VIDEO_SIGNAL_TYPE_AVAILABLE_MASK	0x20000000
+
 static int mmu_enable;
 /*mmu do not support mbaff*/
 static int force_enable_mmu = 0;
@@ -1867,7 +1868,10 @@ static void config_decode_canvas(struct vdec_h264_hw_s *hw, int i)
 
 	if (hw->canvas_mode == CANVAS_BLKMODE_LINEAR) {
 		blkmode = CANVAS_BLKMODE_LINEAR;
-		endian = 7;
+		if ((h264_debug_flag & IGNORE_PARAM_FROM_CONFIG) == 0)
+			endian = 7;
+		else
+			endian = 0;
 	}
 
 	if (hw->is_used_v4l) {
@@ -8618,7 +8622,10 @@ static int ammvdec_h264_probe(struct platform_device *pdev)
 	/* the ctx from v4l2 driver. */
 	hw->v4l2_ctx = pdata->private;
 
-	hw->canvas_mode = pdata->canvas_mode;
+	if ((h264_debug_flag & IGNORE_PARAM_FROM_CONFIG) == 0)
+		hw->canvas_mode = pdata->canvas_mode;
+	else
+		hw->canvas_mode = mem_map_mode;
 
 	platform_set_drvdata(pdev, pdata);
 

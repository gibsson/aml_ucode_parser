commit dcf9502ced24f5057599f9d61c6bdd0b03931739
Author: shihong.zheng <shihong.zheng@amlogic.com>
Date:   Mon Jun 10 14:02:37 2019 +0800

    vh265: fix repeatly print no mem for amvdec_h265. [1/1]
    
    PD#SWPL-8803
    
    Problem:
    repeatly print no mem error cause system block.
    
    Solution:
    set no mem error, return from repeatly alloc.
    
    Verify:
    x301
    
    Change-Id: Ib978f6bf72a968c7bd0e08bbcfa5109a8a6f4393
    Signed-off-by: shihong.zheng <shihong.zheng@amlogic.com>

diff --git a/drivers/frame_provider/decoder/h265/vh265.c b/drivers/frame_provider/decoder/h265/vh265.c
index f21cf63..e7a4830 100644
--- a/drivers/frame_provider/decoder/h265/vh265.c
+++ b/drivers/frame_provider/decoder/h265/vh265.c
@@ -2940,6 +2940,9 @@ static int alloc_buf(struct hevc_state_s *hevc)
 	int buf_size = cal_current_buf_size(hevc, NULL);
 	struct vdec_fb *fb = NULL;
 
+	if (hevc->fatal_error & DECODER_FATAL_ERROR_NO_MEM)
+		return ret;
+
 	for (i = 0; i < BUF_POOL_SIZE; i++) {
 		if (hevc->m_BUF[i].start_adr == 0)
 			break;
@@ -2972,8 +2975,16 @@ static int alloc_buf(struct hevc_state_s *hevc)
 					VF_BUFFER_IDX(i), buf_size,
 					DRIVER_NAME,
 					&hevc->m_BUF[i].start_adr);
-				if (ret < 0)
+				if (ret < 0) {
 					hevc->m_BUF[i].start_adr = 0;
+					if (i <= 8) {
+						hevc->fatal_error |=
+							DECODER_FATAL_ERROR_NO_MEM;
+						hevc_print(hevc, PRINT_FLAG_ERROR,
+							"%s[%d], size: %d, no mem fatal err\n",
+							__func__, i, buf_size);
+					}
+				}
 			}
 
 			if (ret >= 0) {

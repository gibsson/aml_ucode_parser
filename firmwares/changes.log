commit bd510bfa353249db1bf7296e2bbc26a4fedfdb7c
Author: shuanglong.wang <shuanglong.wang@amlogic.com>
Date:   Sat May 25 18:24:30 2019 +0800

    vmpeg12_multi: invalid I-frame pts not use for reference [2/2]
    
    PD#OTT-3857
    
    Problem:
    some stream I-frame pts is NA
    
    Solution:
    invalid I-frame pts not use for reference, then will
    recalculate in amlvideo
    
    Verify:
    verify by galilei
    
    Change-Id: Id61ed36c51bbb71957507f929b4724557a2ff151
    Signed-off-by: shuanglong.wang <shuanglong.wang@amlogic.com>

diff --git a/drivers/frame_provider/decoder/mpeg12/vmpeg12_multi.c b/drivers/frame_provider/decoder/mpeg12/vmpeg12_multi.c
index 4c99174..1d95e31 100644
--- a/drivers/frame_provider/decoder/mpeg12/vmpeg12_multi.c
+++ b/drivers/frame_provider/decoder/mpeg12/vmpeg12_multi.c
@@ -227,6 +227,7 @@ struct vdec_mpeg12_hw_s {
 	bool pts_valid[DECODE_BUFFER_NUM_MAX];
 	u32 canvas_spec[DECODE_BUFFER_NUM_MAX];
 	u64 lastpts64;
+	u32 last_chunk_pts;
 	struct canvas_config_s canvas_config[DECODE_BUFFER_NUM_MAX][2];
 	struct dec_sysinfo vmpeg12_amstream_dec_info;
 
@@ -1294,12 +1295,17 @@ static irqreturn_t vmpeg12_isr_thread_fn(struct vdec_s *vdec, int irq)
 		/*debug_print(DECODE_ID(hw), PRINT_FLAG_TIMEINFO,
 		"ammvdec_mpeg12: error = 0x%x, offset = 0x%x\n",
 			info & PICINFO_ERROR, offset);*/
-
-		if (((info & PICINFO_TYPE_MASK) == PICINFO_TYPE_I)) {
+		if (((info & PICINFO_TYPE_MASK) == PICINFO_TYPE_I) ||
+			((info & PICINFO_TYPE_MASK) == PICINFO_TYPE_P)) {
 			if (hw->chunk) {
 				hw->pts_valid[index] = hw->chunk->pts_valid;
 				hw->pts[index] = hw->chunk->pts;
 				hw->pts64[index] = hw->chunk->pts64;
+				if (hw->last_chunk_pts == hw->chunk->pts) {
+					hw->pts_valid[index] = 0;
+					debug_print(DECODE_ID(hw), PRINT_FLAG_TIMEINFO,
+						"pts invalid\n");
+				}
 		debug_print(DECODE_ID(hw), PRINT_FLAG_TIMEINFO,
 		"!!!cpts=%d,pts64=%lld,size=%d,offset=%d\n",
 			hw->pts[index], hw->pts64[index],
@@ -1316,6 +1322,9 @@ static irqreturn_t vmpeg12_isr_thread_fn(struct vdec_s *vdec, int irq)
 				}
 			}
 		} else {
+			if (hw->chunk) {
+				hw->last_chunk_pts = hw->chunk->pts;
+			}
 			hw->pts_valid[index] = false;
 		}
 		/*if (frame_prog == 0) */

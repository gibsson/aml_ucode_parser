commit 9d6acddf70a0b780f0d33dd32c60dcde6038ea7f
Author: Peng Yixin <yixin.peng@amlogic.com>
Date:   Tue May 28 20:55:57 2019 +0800

    media_module: CTS Test fail,wrong number of frames decode expect [1/1]
    
    PD#SWPL-9187
    
    Problem:
    CTS decoder Test fail, wrong number of frames decode expected
    300, but was 297.
    
    Solution:
    the last three frames are not displayed because no decoding
    scheduling after sending eos instruction. The problem is
    solved by perform a decoding schedule after the eos
    instruction is sent.
    
    Verify:
    verified on u212
    
    Change-Id: I25ebec8b62eb9d9e314cdc1b1b4b7c131214c0db
    Signed-off-by: Peng Yixin <yixin.peng@amlogic.com>

diff --git a/drivers/frame_provider/decoder/utils/vdec.c b/drivers/frame_provider/decoder/utils/vdec.c
index 25c5b6f..00acd13 100644
--- a/drivers/frame_provider/decoder/utils/vdec.c
+++ b/drivers/frame_provider/decoder/utils/vdec.c
@@ -615,7 +615,7 @@ static void vdec_update_buff_status(void)
 	list_for_each_entry(vdec, &core->connected_vdec_list, list) {
 		struct vdec_input_s *input = &vdec->input;
 		if (input_frame_based(input)) {
-			if (input->have_frame_num)
+			if (input->have_frame_num || input->eos)
 				core->buff_flag |= vdec->core_mask;
 		} else if (input_stream_based(input)) {
 			core->stream_buff_flag |= vdec->core_mask;
@@ -1464,10 +1464,12 @@ EXPORT_SYMBOL(vdec_set_flag);
 
 void vdec_set_eos(struct vdec_s *vdec, bool eos)
 {
+	struct vdec_core_s *core = vdec_core;
 	vdec->input.eos = eos;
 
 	if (vdec->slave)
 		vdec->slave->input.eos = eos;
+	up(&core->sem);
 }
 EXPORT_SYMBOL(vdec_set_eos);
 

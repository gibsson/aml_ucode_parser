commit 627825a3ad699a579af146b4301c7bb196eef355
Author: Peng Yixin <yixin.peng@amlogic.com>
Date:   Fri Mar 1 20:56:06 2019 +0800

    media_module: add the instance id on the dump_vdec_chunks node [1/1]
    
    PD#SWPL-NONE
    
    Problem:
    Through the dump_vdec_chunks node, it is not clear know the
    input buffer of video in each channel during multi-channel
    playback.
    
    Solution:
    Adding the corresponding instance id of the input buffer to
    solves this problem.
    
    Verify:
    u212
    
    Change-Id: Ibdae99e6861a4ae3afb65b2487fcfd11655e8f20
    Signed-off-by: Peng Yixin <yixin.peng@amlogic.com>

diff --git a/drivers/frame_provider/decoder/utils/vdec.c b/drivers/frame_provider/decoder/utils/vdec.c
index 158360c..4f5ca65 100644
--- a/drivers/frame_provider/decoder/utils/vdec.c
+++ b/drivers/frame_provider/decoder/utils/vdec.c
@@ -4663,7 +4663,7 @@ static ssize_t dump_vdec_chunks_show(struct class *class,
 	else {
 		struct vdec_s *vdec;
 		list_for_each_entry(vdec, &core->connected_vdec_list, list) {
-			pbuf += vdec_input_dump_chunks(&vdec->input,
+			pbuf += vdec_input_dump_chunks(vdec->id, &vdec->input,
 				pbuf, PAGE_SIZE - (pbuf - buf));
 		}
 	}
diff --git a/drivers/frame_provider/decoder/utils/vdec_input.c b/drivers/frame_provider/decoder/utils/vdec_input.c
index a5dfeba..665099d 100644
--- a/drivers/frame_provider/decoder/utils/vdec_input.c
+++ b/drivers/frame_provider/decoder/utils/vdec_input.c
@@ -404,6 +404,7 @@ int vdec_input_dump_blocks(struct vdec_input_s *input,
 }
 
 static int vdec_input_dump_chunk_locked(
+	int id,
 	struct vframe_chunk_s *chunk,
 	char *buf, int size)
 {
@@ -423,7 +424,8 @@ static int vdec_input_dump_chunk_locked(
 	} while (0)
 
 	BUFPRINT(
-		"\t[%lld:%p]-off=%d,size:%d,p:%d,\tpts64=%lld,addr=%p\n",
+		"\t[%d][%lld:%p]-off=%d,size:%d,p:%d,\tpts64=%lld,addr=%p\n",
+		id,
 		chunk->sequence,
 		chunk->block,
 		chunk->offset,
@@ -443,7 +445,7 @@ static int vdec_input_dump_chunk_locked(
 	return tsize;
 }
 
-int vdec_input_dump_chunks(struct vdec_input_s *input,
+int vdec_input_dump_chunks(int id, struct vdec_input_s *input,
 	char *bufs, int size)
 {
 
@@ -452,12 +454,15 @@ int vdec_input_dump_chunks(struct vdec_input_s *input,
 	char *lbuf = bufs;
 	char sbuf[256];
 	int s = 0;
+	int i = 0;
+
 	if (size <= 0)
 		return 0;
 	if (!bufs)
 		lbuf = sbuf;
-	snprintf(lbuf + s, size - s,
-		"blocks:vdec-%d id:%d,bufsize=%d,dsize=%d,frames:%d,maxframe:%d\n",
+	s = snprintf(lbuf + s, size - s,
+		"[%d]blocks:vdec-%d id:%d,bufsize=%d,dsize=%d,frames:%d,maxframe:%d\n",
+		id,
 		input->id,
 		input->block_nums,
 		input->size,
@@ -477,7 +482,10 @@ int vdec_input_dump_chunks(struct vdec_input_s *input,
 				p, struct vframe_chunk_s, list);
 		if (bufs != NULL)
 			lbuf = bufs + s;
-		s += vdec_input_dump_chunk_locked(chunk, lbuf, size - s);
+		s += vdec_input_dump_chunk_locked(id, chunk, lbuf, size - s);
+		i++;
+		if (i >= 10)
+			break;
 	}
 	vdec_input_unlock(input, flags);
 	return s;
diff --git a/drivers/frame_provider/decoder/utils/vdec_input.h b/drivers/frame_provider/decoder/utils/vdec_input.h
index 7ddfc71..26ccb49 100644
--- a/drivers/frame_provider/decoder/utils/vdec_input.h
+++ b/drivers/frame_provider/decoder/utils/vdec_input.h
@@ -167,7 +167,7 @@ extern void vdec_input_unlock(struct vdec_input_s *input, unsigned long lock);
 extern void vdec_input_release(struct vdec_input_s *input);
 /* return block handle and free block */
 extern u32 vdec_input_get_freed_handle(struct vdec_s *vdec);
-int vdec_input_dump_chunks(struct vdec_input_s *input,
+int vdec_input_dump_chunks(int id, struct vdec_input_s *input,
 	char *bufs, int size);
 int vdec_input_dump_blocks(struct vdec_input_s *input,
 	char *bufs, int size);

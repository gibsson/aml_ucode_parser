commit 888e6b4bc410b8dea7901eeb17044155cb8e8b3d
Merge: 97fe3d1 a093654
Author: Hui Zhang <hui.zhang@amlogic.com>
Date:   Wed Mar 13 01:39:43 2019 -0700

    Merge "media_module: add atrace print [1/1]" into amlogic-4.9-dev

diff --cc drivers/frame_provider/decoder/avs/avs.c
index 0e9282c,7e15114..dd76fbc
--- a/drivers/frame_provider/decoder/avs/avs.c
+++ b/drivers/frame_provider/decoder/avs/avs.c
@@@ -581,9 -585,10 +584,10 @@@ static void vavs_isr(void
  				decoder_bmmu_box_get_mem_handle(
  					mm_blk_handle,
  					buffer_index);
 -
 +			decoder_do_frame_check(NULL, vf);
  			kfifo_put(&display_q,
  					  (const struct vframe_s *)vf);
+ 			ATRACE_COUNTER(MODULE_NAME, vf->pts);
  			vf_notify_receiver(PROVIDER_NAME,
  					VFRAME_EVENT_PROVIDER_VFRAME_READY,
  					NULL);
@@@ -717,9 -723,9 +722,10 @@@
  				decoder_bmmu_box_get_mem_handle(
  					mm_blk_handle,
  					buffer_index);
 +			decoder_do_frame_check(NULL, vf);
  			kfifo_put(&display_q,
  					  (const struct vframe_s *)vf);
+ 			ATRACE_COUNTER(MODULE_NAME, vf->pts);
  			vf_notify_receiver(PROVIDER_NAME,
  					VFRAME_EVENT_PROVIDER_VFRAME_READY,
  					NULL);
diff --cc drivers/frame_provider/decoder/h264/vh264.c
index 9423819,99be440..1781bb7
--- a/drivers/frame_provider/decoder/h264/vh264.c
+++ b/drivers/frame_provider/decoder/h264/vh264.c
@@@ -55,9 -55,10 +55,12 @@@
  #include "../utils/firmware.h"
  #include <linux/amlogic/tee.h>
  #include "../../../common/chips/decoder_cpu_ver_info.h"
 +#include <linux/uaccess.h>
 +
  
+ #include <trace/events/meson_atrace.h>
+ 
+ 
  #define DRIVER_NAME "amvdec_h264"
  #define MODULE_NAME "amvdec_h264"
  #define MEM_NAME "codec_264"
diff --cc drivers/frame_provider/decoder/h264_multi/vmh264.c
index 0fefdfd,6ed22ae..88c86a9
--- a/drivers/frame_provider/decoder/h264_multi/vmh264.c
+++ b/drivers/frame_provider/decoder/h264_multi/vmh264.c
@@@ -2587,9 -2582,8 +2590,9 @@@ int prepare_display_buf(struct vdec_s *
  		}
  
  		kfifo_put(&hw->display_q, (const struct vframe_s *)vf);
- 
+ 		ATRACE_COUNTER(MODULE_NAME, vf->pts);
  		hw->vf_pre_count++;
 +		vdec->vdec_fps_detec(vdec->id);
  		vf_notify_receiver(vdec->vf_provider_name,
  			VFRAME_EVENT_PROVIDER_VFRAME_READY, NULL);
  	}
diff --cc drivers/frame_provider/decoder/h265/vh265.c
index 463f377,019527d..9e7f8f3
--- a/drivers/frame_provider/decoder/h265/vh265.c
+++ b/drivers/frame_provider/decoder/h265/vh265.c
@@@ -46,9 -46,8 +46,10 @@@
  #include "../utils/config_parser.h"
  #include "../utils/firmware.h"
  #include "../../../common/chips/decoder_cpu_ver_info.h"
+ #include <trace/events/meson_atrace.h>
  
 +#define CONSTRAIN_MAX_BUF_NUM
 +
  #define SWAP_HEVC_UCODE
  #define DETREFILL_ENABLE
  
diff --cc drivers/frame_provider/decoder/mpeg4/vmpeg4_multi.c
index 8e69c74,406ae8b..60f69ed
--- a/drivers/frame_provider/decoder/mpeg4/vmpeg4_multi.c
+++ b/drivers/frame_provider/decoder/mpeg4/vmpeg4_multi.c
@@@ -752,8 -755,8 +755,9 @@@ static irqreturn_t vmpeg4_isr_thread_fn
  			} else {
  				kfifo_put(&hw->display_q,
  				(const struct vframe_s *)vf);
+ 				ATRACE_COUNTER(MODULE_NAME, vf->pts);
  				hw->frame_num++;
 +			vdec->vdec_fps_detec(vdec->id);
  			vf_notify_receiver(vdec->vf_provider_name,
  					VFRAME_EVENT_PROVIDER_VFRAME_READY,
  					NULL);
@@@ -801,8 -804,8 +805,9 @@@
  			} else {
  				kfifo_put(&hw->display_q,
  				(const struct vframe_s *)vf);
+ 				ATRACE_COUNTER(MODULE_NAME, vf->pts);
  				hw->frame_num++;
 +			vdec->vdec_fps_detec(vdec->id);
  			vf_notify_receiver(vdec->vf_provider_name,
  				VFRAME_EVENT_PROVIDER_VFRAME_READY,
  				NULL);
@@@ -856,9 -859,9 +861,10 @@@
  					vf->duration = duration * (hw->timeout_flag + 1);
  				kfifo_put(&hw->display_q,
  					(const struct vframe_s *)vf);
+ 				ATRACE_COUNTER(MODULE_NAME, vf->pts);
  				hw->frame_num++;
  				hw->timeout_flag = 0;
 +				vdec->vdec_fps_detec(vdec->id);
  				vf_notify_receiver(vdec->vf_provider_name,
  					VFRAME_EVENT_PROVIDER_VFRAME_READY, NULL);
  			}
